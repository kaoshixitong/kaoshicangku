<application>
  <component name="AppStorage">
    <histories>
      <item value="Hierarchical" />
      <item value="Unprocessable" />
      <item value="Precondition Required" />
      <item value="Unavailable For Legal Reasons" />
      <item value="非法" />
      <item value="错误" />
      <item value="开通" />
      <item value="convert" />
      <item value="转换" />
      <item value="申请" />
      <item value="Statistics" />
      <item value="选择" />
      <item value="unambiguous" />
      <item value="Shear" />
      <item value="whether to create a multipart message that * supports alternative texts, inline elements and attachments" />
      <item value="Returns an array of {@code Class} objects that represent the formal * parameter types, in declaration order, of the executable * represented by this object. Returns an array of length * 0 if the underlying executable takes no parameters. * * @return the parameter types for the executable this object * represents" />
      <item value="Returns an array of {@code Parameter} objects that represent * all the parameters to the underlying executable represented by * this object. Returns an array of length 0 if the executable * has no parameters. * * &lt;p&gt;The parameters of the underlying executable do not necessarily * have unique names, or names that are legal identifiers in the * Java programming language (JLS 3.8). * * @throws MalformedParametersException if the class file contains * a MethodParameters attribute that is improperly formatted. * @return an array of {@code Parameter} objects representing all * the parameters to the executable this object represents." />
      <item value="分离" />
      <item value="分隔符" />
      <item value="计时" />
      <item value="找回" />
      <item value="对象" />
      <item value="alphabetically" />
      <item value="功能" />
      <item value="模块" />
      <item value="Returns super.available() if the value is not zero or else always returns * 1. This is necessary to get around a GZIPInputStream bug which would * mis-behave in some edge cases upon zero returned from available(), * causing file truncation. * &lt;p&gt; * http://bugs.java.com/bugdatabase/view_bug.do?bug_id=7036144 * &lt;p&gt; * Reference TT: 0034867351" />
      <item value="Input stream representing the content of an {@link COSObject}. In addition to * the methods supplied by the {@link InputStream} class, * {@link COSObjectInputStream} supplies the abort() method, which will terminate * an HTTP connection to the COS object." />
      <item value="Gets the input stream containing the contents of this object. * * &lt;p&gt; * &lt;b&gt;Note&lt;/b&gt;: The method is a simple getter and does not actually create a stream. If you * retrieve an COSObject, you should close this input stream as soon as possible, because the * object contents aren't buffered in memory and stream directly from Qcloud COS. Further, * failure to close this stream can cause the request pool to become blocked. * &lt;/p&gt; * * @return An input stream containing the contents of this object. * * @see COSObject#getObjectMetadata() * @see COSObject#setObjectContent(InputStream)" />
      <item value="更换头像" />
      <item value="修改头像" />
      <item value="加密" />
      <item value="汉字" />
      <item value="is Overlay" />
      <item value="rectangles" />
      <item value="验证码" />
      <item value="路径" />
      <item value="确认密码" />
      <item value="*" />
      <item value="通配符" />
      <item value="负载" />
      <item value="开启" />
      <item value="检测" />
      <item value="后缀" />
      <item value="次数" />
      <item value="终点" />
      <item value="Compares its two arguments for order. Returns a negative integer, * zero, or a positive integer as the first argument is less than, equal * to, or greater than the second.&lt;p&gt; * * In the foregoing description, the notation * &lt;tt&gt;sgn(&lt;/tt&gt;&lt;i&gt;expression&lt;/i&gt;&lt;tt&gt;)&lt;/tt&gt; designates the mathematical * &lt;i&gt;signum&lt;/i&gt; function, which is defined to return one of &lt;tt&gt;-1&lt;/tt&gt;, * &lt;tt&gt;0&lt;/tt&gt;, or &lt;tt&gt;1&lt;/tt&gt; according to whether the value of * &lt;i&gt;expression&lt;/i&gt; is negative, zero or positive.&lt;p&gt; * * The implementor must ensure that &lt;tt&gt;sgn(compare(x, y)) == * -sgn(compare(y, x))&lt;/tt&gt; for all &lt;tt&gt;x&lt;/tt&gt; and &lt;tt&gt;y&lt;/tt&gt;. (This * implies that &lt;tt&gt;compare(x, y)&lt;/tt&gt; must throw an exception if and only * if &lt;tt&gt;compare(y, x)&lt;/tt&gt; throws an exception.)&lt;p&gt; * * The implementor must also ensure that the relation is transitive: * &lt;tt&gt;((compare(x, y)&amp;gt;0) &amp;amp;&amp;amp; (compare(y, z)&amp;gt;0))&lt;/tt&gt; implies * &lt;tt&gt;compare(x, z)&amp;gt;0&lt;/tt&gt;.&lt;p&gt; * * Finally, the implementor must ensure that &lt;tt&gt;compare(x, y)==0&lt;/tt&gt; * implies that &lt;tt&gt;sgn(compare(x, z))==sgn(compare(y, z))&lt;/tt&gt; for all * &lt;tt&gt;z&lt;/tt&gt;.&lt;p&gt; * * It is generally the case, but &lt;i&gt;not&lt;/i&gt; strictly required that * &lt;tt&gt;(compare(x, y)==0) == (x.equals(y))&lt;/tt&gt;. Generally speaking, * any comparator that violates this condition should clearly indicate * this fact. The recommended language is &quot;Note: this comparator * imposes orderings that are inconsistent with equals.&quot;" />
      <item value="层" />
      <item value="floor" />
      <item value="成本" />
      <item value="兔子" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="36" />
        <entry key="ENGLISH" value="37" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>