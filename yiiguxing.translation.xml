<application>
  <component name="AppStorage">
    <histories>
      <item value="Returns super.available() if the value is not zero or else always returns * 1. This is necessary to get around a GZIPInputStream bug which would * mis-behave in some edge cases upon zero returned from available(), * causing file truncation. * &lt;p&gt; * http://bugs.java.com/bugdatabase/view_bug.do?bug_id=7036144 * &lt;p&gt; * Reference TT: 0034867351" />
      <item value="Input stream representing the content of an {@link COSObject}. In addition to * the methods supplied by the {@link InputStream} class, * {@link COSObjectInputStream} supplies the abort() method, which will terminate * an HTTP connection to the COS object." />
      <item value="Gets the input stream containing the contents of this object. * * &lt;p&gt; * &lt;b&gt;Note&lt;/b&gt;: The method is a simple getter and does not actually create a stream. If you * retrieve an COSObject, you should close this input stream as soon as possible, because the * object contents aren't buffered in memory and stream directly from Qcloud COS. Further, * failure to close this stream can cause the request pool to become blocked. * &lt;/p&gt; * * @return An input stream containing the contents of this object. * * @see COSObject#getObjectMetadata() * @see COSObject#setObjectContent(InputStream)" />
      <item value="更换头像" />
      <item value="修改头像" />
      <item value="加密" />
      <item value="汉字" />
      <item value="is Overlay" />
      <item value="rectangles" />
      <item value="验证码" />
      <item value="路径" />
      <item value="确认密码" />
      <item value="*" />
      <item value="通配符" />
      <item value="负载" />
      <item value="开启" />
      <item value="检测" />
      <item value="后缀" />
      <item value="次数" />
      <item value="终点" />
      <item value="Compares its two arguments for order. Returns a negative integer, * zero, or a positive integer as the first argument is less than, equal * to, or greater than the second.&lt;p&gt; * * In the foregoing description, the notation * &lt;tt&gt;sgn(&lt;/tt&gt;&lt;i&gt;expression&lt;/i&gt;&lt;tt&gt;)&lt;/tt&gt; designates the mathematical * &lt;i&gt;signum&lt;/i&gt; function, which is defined to return one of &lt;tt&gt;-1&lt;/tt&gt;, * &lt;tt&gt;0&lt;/tt&gt;, or &lt;tt&gt;1&lt;/tt&gt; according to whether the value of * &lt;i&gt;expression&lt;/i&gt; is negative, zero or positive.&lt;p&gt; * * The implementor must ensure that &lt;tt&gt;sgn(compare(x, y)) == * -sgn(compare(y, x))&lt;/tt&gt; for all &lt;tt&gt;x&lt;/tt&gt; and &lt;tt&gt;y&lt;/tt&gt;. (This * implies that &lt;tt&gt;compare(x, y)&lt;/tt&gt; must throw an exception if and only * if &lt;tt&gt;compare(y, x)&lt;/tt&gt; throws an exception.)&lt;p&gt; * * The implementor must also ensure that the relation is transitive: * &lt;tt&gt;((compare(x, y)&amp;gt;0) &amp;amp;&amp;amp; (compare(y, z)&amp;gt;0))&lt;/tt&gt; implies * &lt;tt&gt;compare(x, z)&amp;gt;0&lt;/tt&gt;.&lt;p&gt; * * Finally, the implementor must ensure that &lt;tt&gt;compare(x, y)==0&lt;/tt&gt; * implies that &lt;tt&gt;sgn(compare(x, z))==sgn(compare(y, z))&lt;/tt&gt; for all * &lt;tt&gt;z&lt;/tt&gt;.&lt;p&gt; * * It is generally the case, but &lt;i&gt;not&lt;/i&gt; strictly required that * &lt;tt&gt;(compare(x, y)==0) == (x.equals(y))&lt;/tt&gt;. Generally speaking, * any comparator that violates this condition should clearly indicate * this fact. The recommended language is &quot;Note: this comparator * imposes orderings that are inconsistent with equals.&quot;" />
      <item value="层" />
      <item value="floor" />
      <item value="成本" />
      <item value="兔子" />
      <item value="鸡" />
      <item value="as indicated by" />
      <item value="indicated" />
      <item value="reached" />
      <item value="capacities" />
      <item value="when the number of threads is greater than * the core, this is the maximum time that excess idle threads * will wait for new tasks before terminating" />
      <item value="excess" />
      <item value="Creates a new {@code ThreadPoolExecutor} with the given initial * parameters. * * @param corePoolSize the number of threads to keep in the pool, even * if they are idle, unless {@code allowCoreThreadTimeOut} is set * @param maximumPoolSize the maximum number of threads to allow in the * pool * @param keepAliveTime when the number of threads is greater than * the core, this is the maximum time that excess idle threads * will wait for new tasks before terminating. * @param unit the time unit for the {@code keepAliveTime} argument * @param workQueue the queue to use for holding tasks before they are * executed. This queue will hold only the {@code Runnable} * tasks submitted by the {@code execute} method. * @param threadFactory the factory to use when the executor * creates a new thread * @param handler the handler to use when execution is blocked * because the thread bounds and queue capacities are reached * @throws IllegalArgumentException if one of the following holds:&lt;br&gt; * {@code corePoolSize &lt; 0}&lt;br&gt; * {@code keepAliveTime &lt; 0}&lt;br&gt; * {@code maximumPoolSize &lt;= 0}&lt;br&gt; * {@code maximumPoolSize &lt; corePoolSize} * @throws NullPointerException if {@code workQueue} * or {@code threadFactory} or {@code" />
      <item value="原子" />
      <item value="粒子" />
      <item value="填充" />
      <item value="基因" />
      <item value="外显子" />
      <item value="木棒" />
      <item value="future" />
      <item value="获取" />
      <item value="Duration" />
      <item value="getKeepAliveDuration" />
      <item value="conflict" />
      <item value="CONFILICT" />
      <item value="选课成功" />
      <item value="年级" />
      <item value="禁止" />
      <item value="学分" />
      <item value="不允许" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="22" />
        <entry key="ENGLISH" value="23" />
      </map>
    </option>
  </component>
</application>